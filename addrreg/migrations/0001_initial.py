# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-23 14:40
from __future__ import unicode_literals

import addrreg.models
import addrreg.models.base
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('house_number', models.CharField(blank=True, max_length=6, null=True, verbose_name='House Number')),
                ('floor', models.CharField(blank=True, max_length=2, null=True, verbose_name='Floor')),
                ('room', models.CharField(blank=True, max_length=6, null=True, verbose_name='Room')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'verbose_name': 'Address',
                'default_permissions': (),
                'ordering': ('road',),
            },
        ),
        migrations.CreateModel(
            name='AddressRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('house_number', models.CharField(blank=True, max_length=6, null=True, verbose_name='House Number')),
                ('floor', models.CharField(blank=True, max_length=2, null=True, verbose_name='Floor')),
                ('room', models.CharField(blank=True, max_length=6, null=True, verbose_name='Room')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'default_permissions': (),
                'ordering': ('road',),
                'verbose_name': 'Address',
                'db_table': 'addrreg_address_registrations',
            },
        ),
        migrations.CreateModel(
            name='BNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.CharField(db_index=True, max_length=8, null=True, verbose_name='Code')),
                ('name', models.CharField(max_length=60, null=True, verbose_name='Name')),
                ('nickname', models.CharField(max_length=60, null=True, verbose_name='Nickname')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name_plural': 'B-Numbers',
                'default_permissions': (),
                'verbose_name': 'B-Number',
            },
        ),
        migrations.CreateModel(
            name='BNumberRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.CharField(db_index=True, max_length=8, null=True, verbose_name='Code')),
                ('name', models.CharField(max_length=60, null=True, verbose_name='Name')),
                ('nickname', models.CharField(max_length=60, null=True, verbose_name='Nickname')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'B-Numbers',
                'default_permissions': (),
                'verbose_name': 'B-Number',
                'db_table': 'addrreg_bnumber_registrations',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, null=True, verbose_name='Code')),
                ('abbrev', models.CharField(db_index=True, max_length=4, verbose_name='Abbreviation')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='Name')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Districts',
                'verbose_name': 'District',
                'default_permissions': (),
                'ordering': ('abbrev',),
            },
        ),
        migrations.CreateModel(
            name='DistrictRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, null=True, verbose_name='Code')),
                ('abbrev', models.CharField(db_index=True, max_length=4, verbose_name='Abbreviation')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='Name')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.District')),
                ('registration_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Districts',
                'default_permissions': (),
                'ordering': ('abbrev',),
                'verbose_name': 'District',
                'db_table': 'addrreg_district_registrations',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, null=True, verbose_name='Code')),
                ('abbrev', models.CharField(db_index=True, max_length=4, null=True, verbose_name='Abbreviation')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='Name')),
                ('type', enumfields.fields.EnumIntegerField(db_index=True, default=0, enum=addrreg.models.LocalityType, verbose_name='Type')),
                ('locality_state', enumfields.fields.EnumIntegerField(db_index=True, default=10, enum=addrreg.models.LocalityState, verbose_name='Locality State')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('district', addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.District', verbose_name='District')),
            ],
            options={
                'verbose_name_plural': 'Localities',
                'verbose_name': 'Locality',
                'default_permissions': (),
                'ordering': ('abbrev',),
            },
        ),
        migrations.CreateModel(
            name='LocalityRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, null=True, verbose_name='Code')),
                ('abbrev', models.CharField(db_index=True, max_length=4, null=True, verbose_name='Abbreviation')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='Name')),
                ('type', enumfields.fields.EnumIntegerField(db_index=True, default=0, enum=addrreg.models.LocalityType, verbose_name='Type')),
                ('locality_state', enumfields.fields.EnumIntegerField(db_index=True, default=10, enum=addrreg.models.LocalityState, verbose_name='Locality State')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('district', addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.District', verbose_name='District')),
            ],
            options={
                'verbose_name_plural': 'Localities',
                'default_permissions': (),
                'ordering': ('abbrev',),
                'verbose_name': 'Locality',
                'db_table': 'addrreg_locality_registrations',
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, null=True, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, verbose_name='Code')),
                ('abbrev', models.CharField(db_index=True, max_length=4, verbose_name='Abbreviation')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='Name')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Municipalities',
                'verbose_name': 'Municipality',
                'default_permissions': (),
                'ordering': ('abbrev',),
            },
        ),
        migrations.CreateModel(
            name='MunicipalityRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, null=True, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, verbose_name='Code')),
                ('abbrev', models.CharField(db_index=True, max_length=4, verbose_name='Abbreviation')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='Name')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.Municipality')),
                ('registration_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Municipalities',
                'default_permissions': (),
                'ordering': ('abbrev',),
                'verbose_name': 'Municipality',
                'db_table': 'addrreg_municipality_registrations',
            },
        ),
        migrations.CreateModel(
            name='MunicipalityRights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rights', to='addrreg.Municipality', verbose_name='Municipality')),
                ('users', models.ManyToManyField(related_name='rights', to=settings.AUTH_USER_MODEL, verbose_name='Users')),
            ],
            options={
                'verbose_name_plural': 'Municipality Rights',
                'default_permissions': (),
                'verbose_name': 'Municipality Rights',
            },
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveSmallIntegerField(db_index=True, unique=True, verbose_name='Number')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='City')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Postal Codes',
                'verbose_name': 'Postal Code',
                'default_permissions': (),
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='PostalCodeRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('name', models.CharField(db_index=True, max_length=60, verbose_name='City')),
                ('code', models.PositiveSmallIntegerField(db_index=True, verbose_name='Number')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.PostalCode')),
                ('registration_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Postal Codes',
                'default_permissions': (),
                'ordering': ('code',),
                'verbose_name': 'Postal Code',
                'db_table': 'addrreg_postalcode_registrations',
            },
        ),
        migrations.CreateModel(
            name='Road',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveIntegerField(db_index=True, verbose_name='Code')),
                ('name', models.CharField(db_index=True, max_length=34, verbose_name='Name')),
                ('shortname', models.CharField(max_length=20, null=True, verbose_name='Abbreviated Name')),
                ('alternate_name', models.CharField(max_length=34, null=True, verbose_name='Alternate Name')),
                ('cpr_name', models.CharField(max_length=34, null=True, verbose_name='CPR Name')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('location', addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Locality', verbose_name='Locality')),
                ('municipality', addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality')),
            ],
            options={
                'verbose_name_plural': 'Roads',
                'verbose_name': 'Road',
                'default_permissions': (),
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RoadRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('sumiffiik', addrreg.models.base.SumiffiikIDField(db_index=True, default=uuid.uuid4, verbose_name='Sumiffiik ID')),
                ('sumiffiik_domain', addrreg.models.base.SumiffiikDomainField(default=None, max_length=64, verbose_name='Sumiffiik Domain')),
                ('code', models.PositiveIntegerField(db_index=True, verbose_name='Code')),
                ('name', models.CharField(db_index=True, max_length=34, verbose_name='Name')),
                ('shortname', models.CharField(max_length=20, null=True, verbose_name='Abbreviated Name')),
                ('alternate_name', models.CharField(max_length=34, null=True, verbose_name='Alternate Name')),
                ('cpr_name', models.CharField(max_length=34, null=True, verbose_name='CPR Name')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('location', addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Locality', verbose_name='Locality')),
                ('municipality', addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality')),
                ('object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.Road')),
                ('registration_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Roads',
                'default_permissions': (),
                'ordering': ('name',),
                'verbose_name': 'Road',
                'db_table': 'addrreg_road_registrations',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('code', models.PositiveSmallIntegerField(db_index=True, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=60, verbose_name='Description')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='addrreg.State', verbose_name='State')),
            ],
            options={
                'verbose_name_plural': 'States',
                'verbose_name': 'State',
                'default_permissions': (),
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='StateRegistrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=60, verbose_name='Description')),
                ('code', models.PositiveSmallIntegerField(db_index=True, verbose_name='Code')),
                ('objectID', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='Object ID')),
                ('valid_from', models.DateTimeField(editable=False, null=True)),
                ('valid_to', models.DateTimeField(editable=False, null=True)),
                ('registration_from', models.DateTimeField(db_index=True, editable=False)),
                ('registration_to', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.State')),
                ('registration_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='addrreg.State', verbose_name='State')),
            ],
            options={
                'verbose_name_plural': 'States',
                'default_permissions': (),
                'ordering': ('code',),
                'verbose_name': 'State',
                'db_table': 'addrreg_state_registrations',
            },
        ),
        migrations.AddField(
            model_name='roadregistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='road',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='postalcoderegistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='postalcode',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='municipalityregistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='municipality',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='localityregistrations',
            name='municipality',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='localityregistrations',
            name='object',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.Locality'),
        ),
        migrations.AddField(
            model_name='localityregistrations',
            name='postal_code',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.PostalCode', verbose_name='Postal Code'),
        ),
        migrations.AddField(
            model_name='localityregistrations',
            name='registration_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='localityregistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='locality',
            name='municipality',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='locality',
            name='postal_code',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.PostalCode', verbose_name='Postal Code'),
        ),
        migrations.AddField(
            model_name='locality',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='districtregistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='district',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='bnumberregistrations',
            name='location',
            field=addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Locality', verbose_name='Locality'),
        ),
        migrations.AddField(
            model_name='bnumberregistrations',
            name='municipality',
            field=addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='bnumberregistrations',
            name='object',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.BNumber'),
        ),
        migrations.AddField(
            model_name='bnumberregistrations',
            name='registration_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bnumberregistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='bnumber',
            name='location',
            field=addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Locality', verbose_name='Locality'),
        ),
        migrations.AddField(
            model_name='bnumber',
            name='municipality',
            field=addrreg.models.base.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='bnumber',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='addressregistrations',
            name='b_number',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.BNumber', verbose_name='B-Number'),
        ),
        migrations.AddField(
            model_name='addressregistrations',
            name='municipality',
            field=addrreg.models.base.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='addressregistrations',
            name='object',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='addrreg.Address'),
        ),
        migrations.AddField(
            model_name='addressregistrations',
            name='registration_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addressregistrations',
            name='road',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.Road', verbose_name='Road'),
        ),
        migrations.AddField(
            model_name='addressregistrations',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='address',
            name='b_number',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.BNumber', verbose_name='B-Number'),
        ),
        migrations.AddField(
            model_name='address',
            name='municipality',
            field=addrreg.models.base.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='address',
            name='road',
            field=addrreg.models.base.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='addrreg.Road', verbose_name='Road'),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='addrreg.State', verbose_name='State'),
        ),
        migrations.AlterUniqueTogether(
            name='stateregistrations',
            unique_together=set([('code', 'objectID'), ('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='stateregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='roadregistrations',
            unique_together=set([('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='roadregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='postalcoderegistrations',
            unique_together=set([('code', 'objectID'), ('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='postalcoderegistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='municipalityregistrations',
            unique_together=set([('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='municipalityregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='localityregistrations',
            unique_together=set([('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='localityregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='districtregistrations',
            unique_together=set([('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='districtregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='bnumberregistrations',
            unique_together=set([('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='bnumberregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='addressregistrations',
            unique_together=set([('id', 'objectID')]),
        ),
        migrations.AlterIndexTogether(
            name='addressregistrations',
            index_together=set([('objectID', 'registration_from', 'registration_to'), ('object', 'registration_from', 'registration_to')]),
        ),
    ]
